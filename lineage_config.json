{
    "metadata": {
        "version": "1.0",
        "description": "Customer Data Lineage Configuration",
        "last_updated": "2024-03-19"
    },
    "column_level_lineage": [
        {
            "SRC_TABLE_NAME": "{cn_mstr_table}",
            "SRC_COLUMN_NAME": "age_range",
            "BUSINESS_RULE": "nvl(b.age_range, '')",
            "TGT_TABLE_NAME": "RESULT_OF_subquery_a",
            "TGT_COLUMN_NAME": "age_range",
            "TRANSFORMATION_TYPE": "null_handling",
            "DESCRIPTION": "Age range with null handling"
        },
        {
            "SRC_TABLE_NAME": "{cn_mstr_table}",
            "SRC_COLUMN_NAME": "gender",
            "BUSINESS_RULE": "nvl(b.gender, '')",
            "TGT_TABLE_NAME": "RESULT_OF_subquery_a",
            "TGT_COLUMN_NAME": "gender",
            "TRANSFORMATION_TYPE": "null_handling",
            "DESCRIPTION": "Gender with null handling"
        },
        {
            "SRC_TABLE_NAME": "{cn_mstr_key_lookup}",
            "SRC_COLUMN_NAME": "alt_key",
            "BUSINESS_RULE": "CASE WHEN (mkl.alt_key NOT LIKE '%_-SHOPRITE_%' OR mkl.alt_key != 0) THEN 'Y' ELSE 'N' END",
            "TGT_TABLE_NAME": "RESULT_OF_subquery_a",
            "TGT_COLUMN_NAME": "IS_MEMBER",
            "TRANSFORMATION_TYPE": "conditional_logic",
            "DESCRIPTION": "Member status based on alt_key pattern"
        },
        {
            "SRC_TABLE_NAME": "{cn_mstr_key_lookup}",
            "SRC_COLUMN_NAME": "alt_key",
            "BUSINESS_RULE": "CASE WHEN householdmemberidentifier LIKE '%_-SHOPRITE_%' THEN '' WHEN a.activity IS NULL OR a.activity = 'Other' THEN 'Dormant' ELSE a.activity END",
            "TGT_TABLE_NAME": "RESULT_OF_subquery_a",
            "TGT_COLUMN_NAME": "activity",
            "TRANSFORMATION_TYPE": "conditional_logic",
            "DESCRIPTION": "Activity status with special handling for SHOPRITE"
        },
        {
            "SRC_TABLE_NAME": "{cn_mstr_table}",
            "SRC_COLUMN_NAME": "householdmemberidentifier, retailbrand",
            "BUSINESS_RULE": "CASE WHEN (b.householdmemberidentifier IS NULL AND b.retailbrand IS NULL) THEN 'Y' ELSE 'N' END",
            "TGT_TABLE_NAME": "RESULT_OF_subquery_a",
            "TGT_COLUMN_NAME": "IS_ORPHAN",
            "TRANSFORMATION_TYPE": "conditional_logic",
            "DESCRIPTION": "Orphan record identification"
        },
        {
            "SRC_TABLE_NAME": "{cn_mstr_key_lookup}",
            "SRC_COLUMN_NAME": "alt_key",
            "BUSINESS_RULE": "CASE WHEN LENGTH(regexp_replace(mkl.alt_key, '[^_]', '')) = 3 THEN 'Y' ELSE 'N' END",
            "TGT_TABLE_NAME": "RESULT_OF_subquery_a",
            "TGT_COLUMN_NAME": "IS_MANAGER",
            "TRANSFORMATION_TYPE": "conditional_logic",
            "DESCRIPTION": "Manager status based on alt_key pattern"
        },
        {
            "SRC_TABLE_NAME": "{cn_mstr_key_lookup}, {cn_mstr_table}",
            "SRC_COLUMN_NAME": "alt_key, retailbrand",
            "BUSINESS_RULE": "rank() OVER (PARTITION BY mkl.alt_key ORDER BY b.retailbrand)",
            "TGT_TABLE_NAME": "RESULT_OF_subquery_a",
            "TGT_COLUMN_NAME": "rank",
            "TRANSFORMATION_TYPE": "window_function",
            "DESCRIPTION": "Ranking based on retail brand"
        },
        {
            "SRC_TABLE_NAME": "RESULT_OF_subquery_a",
            "SRC_COLUMN_NAME": "*",
            "BUSINESS_RULE": "a.*",
            "TGT_TABLE_NAME": "{cn_extract_table}",
            "TGT_COLUMN_NAME": "*",
            "TRANSFORMATION_TYPE": "direct_mapping",
            "DESCRIPTION": "All columns from subquery"
        },
        {
            "SRC_TABLE_NAME": "RESULT_OF_subquery_a",
            "SRC_COLUMN_NAME": "householdmemberidentifier",
            "BUSINESS_RULE": "pmod(row_number() OVER (ORDER BY householdmemberidentifier), 2000)",
            "TGT_TABLE_NAME": "{cn_extract_table}",
            "TGT_COLUMN_NAME": "cn_hash_id",
            "TRANSFORMATION_TYPE": "hash_generation",
            "DESCRIPTION": "Hash ID generation for distribution"
        }
    ],
    "table_relationships": {
        "source_tables": ["{cn_mstr_table}", "{cn_mstr_key_lookup}"],
        "intermediate_tables": ["RESULT_OF_subquery_a"],
        "target_tables": ["{cn_extract_table}"],
        "relationship_type": "complex_transformation"
    }
} 